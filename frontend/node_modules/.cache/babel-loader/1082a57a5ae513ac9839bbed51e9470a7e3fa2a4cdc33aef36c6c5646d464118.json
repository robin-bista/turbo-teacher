{"ast":null,"code":"var _jsxFileName = \"/Users/robinbista/Desktop/SambaNova/turbo-teacher/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CodeEditor from './components/CodeEditor';\nimport OutputTabs from './components/OutputTabs';\nimport Header from './components/Header';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [explanation, setExplanation] = useState('');\n  const [debuggingTips, setDebuggingTips] = useState('');\n  const [challenge, setChallenge] = useState('');\n  const handleSubmit = async code => {\n    try {\n      // Replace with your backend endpoint\n      const response = await fetch('http://localhost:5000/api/analyze', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code\n        })\n      });\n      const data = await response.json();\n      setExplanation(data.explanation);\n      setDebuggingTips(data.debuggingTips);\n      setChallenge(data.challenge);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OutputTabs, {\n      explanation: explanation,\n      debuggingTips: debuggingTips,\n      challenge: challenge\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"BBq9gPvksXQy8+tGbDacubXEq0E=\");\n_c = App;\nexport default App;\nconst handleSubmit = async code => {\n  try {\n    const response = await fetch(\"http://127.0.0.1:5000/api/parse-code\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        code\n      })\n    });\n    const data = await response.json();\n    // Process the data returned from the backend\n    console.log(data);\n  } catch (err) {\n    console.error(\"Error:\", err);\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CodeEditor","OutputTabs","Header","jsxDEV","_jsxDEV","App","_s","explanation","setExplanation","debuggingTips","setDebuggingTips","challenge","setChallenge","handleSubmit","code","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","log","err","$RefreshReg$"],"sources":["/Users/robinbista/Desktop/SambaNova/turbo-teacher/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport CodeEditor from './components/CodeEditor';\nimport OutputTabs from './components/OutputTabs';\nimport Header from './components/Header';\nimport './App.css';\n\nconst App = () => {\n  const [explanation, setExplanation] = useState('');\n  const [debuggingTips, setDebuggingTips] = useState('');\n  const [challenge, setChallenge] = useState('');\n\n  const handleSubmit = async (code) => {\n    try {\n      // Replace with your backend endpoint\n      const response = await fetch('http://localhost:5000/api/analyze', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ code }),\n      });\n      const data = await response.json();\n      setExplanation(data.explanation);\n      setDebuggingTips(data.debuggingTips);\n      setChallenge(data.challenge);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <CodeEditor onSubmit={handleSubmit} />\n      <OutputTabs\n        explanation={explanation}\n        debuggingTips={debuggingTips}\n        challenge={challenge}\n      />\n    </div>\n  );\n};\n\nexport default App;\nconst handleSubmit = async (code) => {\n  try {\n    const response = await fetch(\"http://127.0.0.1:5000/api/parse-code\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ code }),\n    });\n\n    const data = await response.json();\n    // Process the data returned from the backend\n    console.log(data);\n  } catch (err) {\n    console.error(\"Error:\", err);\n  }\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMc,YAAY,GAAG,MAAOC,IAAI,IAAK;IACnC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP;QAAK,CAAC;MAC/B,CAAC,CAAC;MACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCf,cAAc,CAACc,IAAI,CAACf,WAAW,CAAC;MAChCG,gBAAgB,CAACY,IAAI,CAACb,aAAa,CAAC;MACpCG,YAAY,CAACU,IAAI,CAACX,SAAS,CAAC;IAC9B,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACEpB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA,CAACF,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV3B,OAAA,CAACJ,UAAU;MAACgC,QAAQ,EAAEnB;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtC3B,OAAA,CAACH,UAAU;MACTM,WAAW,EAAEA,WAAY;MACzBE,aAAa,EAAEA,aAAc;MAC7BE,SAAS,EAAEA;IAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CAjCID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAmCT,eAAeA,GAAG;AAClB,MAAMQ,YAAY,GAAG,MAAOC,IAAI,IAAK;EACnC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACnEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP;MAAK,CAAC;IAC/B,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC;IACAE,OAAO,CAACS,GAAG,CAACZ,IAAI,CAAC;EACnB,CAAC,CAAC,OAAOa,GAAG,EAAE;IACZV,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEW,GAAG,CAAC;EAC9B;AACF,CAAC;AAAC,IAAAF,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}