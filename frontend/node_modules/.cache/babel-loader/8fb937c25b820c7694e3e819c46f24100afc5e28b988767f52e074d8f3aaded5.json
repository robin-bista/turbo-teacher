{"ast":null,"code":"var _jsxFileName = \"/Users/robinbista/Desktop/SambaNova/turbo-teacher/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CodeEditor from './components/CodeEditor';\nimport OutputTabs from './components/OutputTabs';\nimport Header from './components/Header';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [parsedOutput, setParsedOutput] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async code => {\n    try {\n      // Send the code to the Flask backend\n      const response = await fetch('http://127.0.0.1:5000/api/parse-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        // Handle backend errors\n        setError(data.error);\n        setParsedOutput('');\n      } else {\n        // Display parsed output\n        setError('');\n        setParsedOutput(JSON.stringify(data, null, 2));\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setError('Failed to connect to the backend. Please try again later.');\n      setParsedOutput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), parsedOutput && /*#__PURE__*/_jsxDEV(OutputTabs, {\n      explanation: parsedOutput,\n      debuggingTips: \"Debugging tips will be added later.\",\n      challenge: \"Challenges will be integrated in future updates.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"tYiLs3mrdTNvGQgkd7BoGccX7d0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CodeEditor","OutputTabs","Header","jsxDEV","_jsxDEV","App","_s","parsedOutput","setParsedOutput","error","setError","handleSubmit","code","response","fetch","method","headers","body","JSON","stringify","data","json","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","explanation","debuggingTips","challenge","_c","$RefreshReg$"],"sources":["/Users/robinbista/Desktop/SambaNova/turbo-teacher/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport CodeEditor from './components/CodeEditor';\nimport OutputTabs from './components/OutputTabs';\nimport Header from './components/Header';\nimport './App.css';\n\nconst App = () => {\n  const [parsedOutput, setParsedOutput] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (code) => {\n    try {\n      // Send the code to the Flask backend\n      const response = await fetch('http://127.0.0.1:5000/api/parse-code', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ code }),\n      });\n\n\n\n      \n      const data = await response.json();\n\n      if (data.error) {\n        // Handle backend errors\n        setError(data.error);\n        setParsedOutput('');\n      } else {\n        // Display parsed output\n        setError('');\n        setParsedOutput(JSON.stringify(data, null, 2));\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setError('Failed to connect to the backend. Please try again later.');\n      setParsedOutput('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <CodeEditor onSubmit={handleSubmit} />\n      {error && <div className=\"error\">{error}</div>}\n      {parsedOutput && (\n        <OutputTabs\n          explanation={parsedOutput}\n          debuggingTips=\"Debugging tips will be added later.\"\n          challenge=\"Challenges will be integrated in future updates.\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,YAAY,GAAG,MAAOC,IAAI,IAAK;IACnC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP;QAAK,CAAC;MAC/B,CAAC,CAAC;MAKF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACX,KAAK,EAAE;QACd;QACAC,QAAQ,CAACU,IAAI,CAACX,KAAK,CAAC;QACpBD,eAAe,CAAC,EAAE,CAAC;MACrB,CAAC,MAAM;QACL;QACAE,QAAQ,CAAC,EAAE,CAAC;QACZF,eAAe,CAACU,IAAI,CAACC,SAAS,CAACC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MAChD;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACd,KAAK,CAAC,QAAQ,EAAEa,GAAG,CAAC;MAC5BZ,QAAQ,CAAC,2DAA2D,CAAC;MACrEF,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA,CAACF,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVzB,OAAA,CAACJ,UAAU;MAAC8B,QAAQ,EAAEnB;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrCpB,KAAK,iBAAIL,OAAA;MAAKoB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEhB;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC7CtB,YAAY,iBACXH,OAAA,CAACH,UAAU;MACT8B,WAAW,EAAExB,YAAa;MAC1ByB,aAAa,EAAC,qCAAqC;MACnDC,SAAS,EAAC;IAAkD;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CAhDID,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAkDT,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}